try %{ 

    define-command ne -docstring 'go to next error/warning from lsp' %{ lsp-find-error --include-warnings }
    define-command pe -docstring 'go to previous error/warning from lsp' %{ lsp-find-error --previous --include-warnings }
    define-command ee -docstring 'go to current error/warning from lsp' %{ lsp-find-error --include-warnings; lsp-find-error --previous --include-warnings }
    define-command lsp-restart -docstring 'restart lsp server' %{ lsp-stop; lsp-start }

    hook global WinSetOption filetype=(c|cpp|cc|rust|javascript|typescript|json) %{
        map window user "l" ": enter-user-mode lsp<ret>" -docstring "LSP mode"
        set-option window lsp_hover_max_lines 5

        echo -debug "Enabling LSP for filtetype %opt{filetype}"
        
        set-face window DiagnosticError default,default,red+c
        set-face window DiagnosticWarning default,default,blue+u

        lsp-auto-hover-enable
        lsp-enable-window
        enable-auto-pairs
    }

    hook global WinSetOption filetype=(c|cpp|cc|rust|javascript|typescript) %{
        set-option window lsp_auto_highlight_references true  
    }


    hook global WinSetOption filetype=(rust) %{
        set window lsp_server_configuration rust.clippy_preference="on"
        hook window BufWritePre .* %{
            evaluate-commands %sh{
                test -f rustfmt.toml && printf lsp-formatting-sync
            }
        }
    }

    hook global KakEnd .* lsp-exit
 } catch %{
    echo -debug "Error while evaluating 'kak-lsp' configuration: %val{error}"

    set-option -add current plug_conf_errors "Error while evaluating 'kak-lsp' configuration:"
    set-option -add current plug_conf_errors %sh{ printf "\n    " }
    set-option -add current plug_conf_errors %val{error}
    set-option -add current plug_conf_errors %sh{ printf "\n\n" }

    hook -once -group plug-conf-err global WinDisplay .* %{
        info -style modal -title "plug.kak error" "%opt{plug_conf_errors}"
        on-key %{
            info -style modal
            execute-keys -with-maps -with-hooks %val{key}
        }
    }
}
